package cadastro;

import java.util.concurrent.TimeUnit;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import dsl.DSL;

public class Cadastro {

	private WebDriver driver;
	private DSL dsl;

	@Before
	public void iniciliza() {
		System.setProperty("webdriver.chrome.driver", "C:\\Users\\Rafael\\Documents\\TesteFuncionalAdvantageOlineShopping\\TesteFuncionalAdvantageShopping\\src\\test\\resources\\chromedriver.exe");
		driver = new ChromeDriver();
		driver.get("https://advantageonlineshopping.com/#/");
		dsl = new DSL(driver);
	}
	
	@After
	public void finaliaza() {
		driver.quit();
	}
	
	public void waitPage(int tempo) {
		driver.manage().timeouts().implicitlyWait(tempo, TimeUnit.SECONDS);
	}
	
	@Test
	public void clicaCadastro() {
	waitPage(5000);
	dsl.clicaByid("menuUser");
	dsl.clicaByid("CREATE NEW ACCOUNT");

}
	@Test
	public void clicaCadastroCompleto() {
	waitPage(2000);
	dsl.clicaByid("menuUser");
	
	try {
		Thread.sleep(5000);
	} catch (InterruptedException e) {
		e.printStackTrace();
	}

	dsl.clicaByLink("CREATE NEW ACCOUNT");
	dsl.mudaPagina(0);
	
	dsl.escreveByName("usernameRegisterPage", "Raaul91");
	Assert.assertEquals("Raaul91", dsl.obterValorCampoByname("usernameRegisterPage"));
	
    dsl.escreveByName("emailRegisterPage","leafar@gmail.com");
    Assert.assertEquals("leafar@gmail.com", dsl.obterValorCampoByname("emailRegisterPage"));
    
	dsl.escreveByName("passwordRegisterPage", "b1107C@rol");
    Assert.assertEquals("b1107C@rol", dsl.obterValorCampoByname("passwordRegisterPage"));
	
	dsl.escreveByName("confirm_passwordRegisterPage","b1107C@rol");
    Assert.assertEquals("b1107C@rol", dsl.obterValorCampoByname("confirm_passwordRegisterPage"));
	
	dsl.escreveByName("first_nameRegisterPage","Rafael");
    Assert.assertEquals("Rafael", dsl.obterValorCampoByname("first_nameRegisterPage"));
	
	dsl.escreveByName("last_nameRegisterPage", "Santos");
    Assert.assertEquals("Santos", dsl.obterValorCampoByname("last_nameRegisterPage"));
	
	dsl.escreveByName("phone_numberRegisterPage", "11987654321");
    Assert.assertEquals("11987654321",dsl.obterValorCampoByname("phone_numberRegisterPage"));
	
	dsl.escreveByName("cityRegisterPage", "São Paulo");
    Assert.assertEquals("São Paulo", dsl.obterValorCampoByname("cityRegisterPage"));
	
	dsl.escreveByName("addressRegisterPage", "Rua 01");
	Assert.assertEquals("Rua 01", dsl.obterValorCampoByname("addressRegisterPage"));
	
	dsl.escreveByName("state_/_province_/_regionRegisterPage","São Paulo");
	Assert.assertEquals("São Paulo", dsl.obterValorCampoByname("state_/_province_/_regionRegisterPage"));
	
	dsl.escreveByName("postal_codeRegisterPage","02987090");
	Assert.assertEquals("02987090", dsl.obterValorCampoByname("postal_codeRegisterPage"));
	
	dsl.clicaByName("i_agree");
	Assert.assertTrue(dsl.selecionadoByName("i_agree"));
	dsl.clicaByid("register_btnundefined");
}
	
	
}
